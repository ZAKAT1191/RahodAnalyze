name: üöÄ Build Multi-Platform Apps

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            name: Windows
            artifact: divergence-analyzer-windows.exe
            build_cmd: pyinstaller --onefile --windowed --name "DivergenceAnalyzer" divergence_analyzer_gui.py
          - os: macos-latest  
            name: macOS
            artifact: divergence-analyzer-macos
            build_cmd: pyinstaller --onefile --windowed --name "DivergenceAnalyzer" divergence_analyzer_gui.py
          - os: ubuntu-latest
            name: Linux
            artifact: divergence-analyzer-linux
            build_cmd: pyinstaller --onefile --name "DivergenceAnalyzer" divergence_analyzer_gui.py

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
    
    - name: üêç Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas matplotlib numpy pyinstaller
    
    - name: üìÅ List files (Debug)
      run: |
        echo "=== Root directory ==="
        ls -la
        echo "=== Looking for Python files ==="
        find . -name "*.py" -type f
      shell: bash
    
    - name: üî® Build application (${{ matrix.name }})
      run: ${{ matrix.build_cmd }}
    
    - name: üìÅ List dist contents (Debug)
      run: |
        echo "=== Dist directory contents ==="
        ls -la dist/
      shell: bash
    
    - name: üè∑Ô∏è Rename executable
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          mv dist/DivergenceAnalyzer.exe dist/${{ matrix.artifact }}
        else
          mv dist/DivergenceAnalyzer dist/${{ matrix.artifact }}
        fi
      shell: bash
    
    - name: ‚úÖ Make executable (Unix)
      if: matrix.os != 'windows-latest'
      run: chmod +x dist/${{ matrix.artifact }}
    
    - name: üì¶ Create DMG for macOS
      if: matrix.os == 'macos-latest'
      run: |
        # –°–æ–∑–¥–∞–µ–º App Bundle —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        mkdir -p dist/DivergenceAnalyzer.app/Contents/MacOS
        mkdir -p dist/DivergenceAnalyzer.app/Contents/Resources
        
        # –ö–æ–ø–∏—Ä—É–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
        cp dist/${{ matrix.artifact }} dist/DivergenceAnalyzer.app/Contents/MacOS/DivergenceAnalyzer
        chmod +x dist/DivergenceAnalyzer.app/Contents/MacOS/DivergenceAnalyzer
        
        # –°–æ–∑–¥–∞–µ–º Info.plist
        cat > dist/DivergenceAnalyzer.app/Contents/Info.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>DivergenceAnalyzer</string>
            <key>CFBundleIdentifier</key>
            <string>com.zakat1191.divergenceanalyzer</string>
            <key>CFBundleName</key>
            <string>Divergence Analyzer</string>
            <key>CFBundleVersion</key>
            <string>1.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
        </dict>
        </plist>
        EOF
        
        # –°–æ–∑–¥–∞–µ–º DMG
        hdiutil create -volname "Divergence Analyzer" -srcfolder dist/DivergenceAnalyzer.app -ov -format UDZO dist/DivergenceAnalyzer.dmg
        
        # –î–æ–±–∞–≤–ª—è–µ–º DMG –∫ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º
        echo "DMG created: dist/DivergenceAnalyzer.dmg"
        ls -la dist/*.dmg
    
    - name: üì§ Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}-Build
        path: |
          dist/${{ matrix.artifact }}
          dist/*.dmg
        
    - name: üéâ Build complete
      run: echo "‚úÖ Build completed for ${{ matrix.name }}!"

# –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–ª–∏–∑—ã - –ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
# –ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–∫–ª—é—á–∏—Ç—å –æ–±—Ä–∞—Ç–Ω–æ
